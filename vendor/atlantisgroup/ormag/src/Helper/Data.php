<?phpnamespace AtlantisGroup\OrmAG\Helper;use ReflectionClass;use ReflectionException;class Data{    /**     * @var array     */    protected static array $entityFieldTypesCache = [];    /**     * @param $entityClassName     * @param array $data     * @throws ReflectionException     */    public static function changeType($entityClassName, array &$data): void    {        $changeableTypes = ['float', 'decimal', 'double', 'integer', 'int', 'boolean', 'bool', 'datetime', 'array'];        if (!isset(self::$entityFieldTypesCache[$entityClassName])) {            $refClass = new ReflectionClass($entityClassName);            foreach ($refClass->getProperties() as $reflectionProperty) {                if (preg_match('/@var\s+([^\s]+)\s([^\s]+)/', $reflectionProperty->getDocComment(), $matches) || preg_match('/@var\s+([^\s]+)/', $reflectionProperty->getDocComment(), $matches)) {                    $type = ltrim(strtolower($matches[1]), '\\');                    if (in_array($type, $changeableTypes)) {                        if (isset($matches[2])) {                            self::$entityFieldTypesCache[$entityClassName][ltrim($matches[2], '$')] = $type;                        }                        self::$entityFieldTypesCache[$entityClassName][$reflectionProperty->name] = $type;                    }                }            }        }        if (isset(self::$entityFieldTypesCache[$entityClassName])) {            foreach (self::$entityFieldTypesCache[$entityClassName] as $field => $type) {                if (!isset($data[$field])) {                    continue;                } elseif (in_array($type, ['integer', 'int'])) {                    $data[$field] = (int)$data[$field];                } elseif (in_array($type, ['float', 'decimal', 'double'])) {                    $data[$field] = (float)$data[$field];                } elseif (in_array($type, ['boolean', 'bool'])) {                    $data[$field] = (bool)$data[$field];                } elseif (in_array($type, ['datetime'])) {                    if ($data[$field] === '0000-00-00 00:00:00') {                        $data[$field] = null;                    } else {                        $data[$field] = (!$data[$field] instanceof \DateTime) ? new \DateTime($data[$field]) : $data[$field];                    }                } elseif (in_array($type, ['array'])) {                    $data[$field] = (array)json_decode($data[$field], true);                }            }        }    }}
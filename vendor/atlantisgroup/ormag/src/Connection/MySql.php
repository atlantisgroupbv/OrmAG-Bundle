<?phpnamespace AtlantisGroup\OrmAG\Connection;use mysqli;use mysqli_stmt;use Psr\Log\LoggerInterface;class MySql implements MySqlInterface{    /**     * @var string     */    private string $host;    /**     * @var string     */    private string $user;    /**     * @var string     */    private string $pass;    /**     * @var     */    private  $port;    /**     * @var string     */    private string $dbname;    /**     * @var string     */    private string $charset;    /**     * @var LoggerInterface     */    private LoggerInterface $logger;    /**     * @var mysqli     */    private mysqli $conn;    public function __construct(string $host, string $user, string $pass, string $port, string $database, string $charset, LoggerInterface $logger)    {        $this->host = $host;        $this->user = $user;        $this->pass = $pass;        $this->port = $port;        $this->dbname = $database;        $this->charset = $charset;        $this->logger = $logger;        $this->conn = $this->setConnection();    }    protected function getOne(string $sql, string $col = null, array $bind = [])    {        $request = $this->query($sql);        $request->execute();        $result = $request->get_result();        $rec = $result->fetch_assoc();dump($rec);        if (!empty($rec)) {            return $rec;        } else {            $this->logger->notice("[".date("Y-m-d H:i:s")."] get Row has found nothing $sql");            return false;        }    }    protected function getSum(string $sql, string $col = null, array $bind = [])    {        $request = $this->query($sql);        $request->execute();        $result = $request->get_result();        $rec = $result->fetch_row();//var_dump($rec[0]);        if (!empty($rec)) {            return $rec[0];        } else {            $this->logger->notice("[".date("Y-m-d H:i:s")."] get Row has found nothing $sql");            return false;        }    }    protected function getAll(string $sql)    {        $request = $this->query($sql);        $request->execute();        $result = $request->get_result();        var_dump($result);    }    private function query(string $sql)    {        $this->logger->notice("[".date("Y-m-d H:i:s")."] prepare $sql");        if (!$result = $this->conn->prepare($sql)) {            $this->logger->warning("[".date("Y-m-d H:i:s")."] prepare $sql failed");        } else {            return $result;        }    }    /**     * @return mysqli     */    private function setConnection(): mysqli    {        return new mysqli($this->host, $this->user, $this->pass, $this->dbname, $this->port, $this->charset);    }}
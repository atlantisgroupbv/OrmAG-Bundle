<?phpnamespace AtlantisGroup\OrmAG\Connection;use Psr\Log\LoggerInterface;abstract class AbstractConnectionFactory extends MySql implements ConnectionFactoryInterface{    /**     * @param string $host     * @param string $user     * @param string $pass     * @param string $port     * @param string $database     * @param string $charset     * @param LoggerInterface $logger     */    public function __construct(string $host, string $user, string $pass, string $port, string $database, string $charset, LoggerInterface $logger)    {        parent::__construct($host, $user, $pass, $port, $database, $charset, $logger);    }    /**     * @param string $query     * @param array $bind     */    public function fetchAll(string $query, array $bind = [])    {        dump('get query');    }    /**     * @param string $query     * @param array $bind     * @return array|false     */    public function fetchValue(string $query, array $bind = [])    {        if ($bind !== []) {            return $this->getSum($query, $this->setCol($bind), $bind);        } else {            return $this->getSum($query);        }    }    /**     * @param array $bind     * @return string     */    private function setCol(array $bind): string    {        return str_repeat('s', count($bind));    }}
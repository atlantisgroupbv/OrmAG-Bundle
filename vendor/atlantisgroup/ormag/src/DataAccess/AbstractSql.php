<?phpnamespace AtlantisGroup\OrmAG\DataAccess;use AtlantisGroup\OrmAG\Connection\ConnectionFactoryInterface;use Psr\Log\LoggerInterface;/** * Class AbstractSql * @package AtlantisGroup\OrmAG\DataAccess */abstract class AbstractSql implements DataAccessInterface{    /**     * @var ConnectionFactoryInterface     */    protected ConnectionFactoryInterface $connectionFactory;    /**     * @var LoggerInterface|null     */    protected ?LoggerInterface $logger;    /**     * @var bool     */    protected bool $debug;    /**     * @param ConnectionFactoryInterface $connectionFactory     * @param bool $debug     */    public function __construct(ConnectionFactoryInterface $connectionFactory, bool $debug = false)    {        $this->connectionFactory = $connectionFactory;        $this->debug = $debug;        $this->name = get_called_class();    }    /**     * @param string $field     * @param string|null $where     * @param array $bind     * @return mixed     */    public function sum(string $field, string $where = null, array $bind = []): mixed    {        $query = "SELECT SUM(`$field`) FROM `$this->table`" . (!empty($where) ? " WHERE $where" : $where);        if ($bind === []) {            $data = $this->connectionFactory->fetchAllNoBind($query);        } else {            $data = $this->connectionFactory->fetchAll($query, $bind);        }        if ($this->debug === true && $this->logger !== null) {            $this->logger->debug('Called ' . $this->name . '::get "{where}".', compact('where', 'bind', 'query', 'data'));        }        return $data;    }    /**     * @param LoggerInterface|null $logger     * @return DataAccessInterface     */    public function setLogger(LoggerInterface $logger = null): DataAccessInterface    {        $this->logger = $logger;        return $this;    }    /**     * @param bool $debug     * @return DataAccessInterface     */    public function setDebug(bool $debug): DataAccessInterface    {        $this->debug = $debug;        return $this;    }}